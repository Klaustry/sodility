
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

// This is class that describes you smart contract.
contract map_opt {
   
    mapping(uint => uint) myMap;

    constructor() public {
        // Check that contract's public key is set
        require(tvm.pubkey() != 0, 101);
        require(msg.pubkey() == tvm.pubkey(), 102);
        tvm.accept();

        myMap[4] = 6;
        myMap[13] = 3;
        myMap[1] = 17;
        myMap[5] = 9;
        myMap[33] = 1;
        
    }

    function getList() public returns (uint[]){
        tvm.accept();
        optional(uint, uint) currentOpt = myMap.min();
        uint[] resArr;

        while(currentOpt.hasValue()){
            (uint key, uint val) = currentOpt.get();
            resArr.push(val);
            currentOpt = myMap.next(key);
        }

        return resArr;
     }

    function renderHelloWorld () public pure returns (string) {
        return 'helloWorld';
    }

    // Updates variable `timestamp` with current blockchain time.
    function touch() external {
        // Each function that accepts external message must check that
        // message is correctly signed.
        require(msg.pubkey() == tvm.pubkey(), 102);
        // Tells to the TVM that we accept this message.
        tvm.accept();
        // Update timestamp
    }

    function sendValue(address dest, uint128 amount, bool bounce) public view {
        require(msg.pubkey() == tvm.pubkey(), 102);
        tvm.accept();
        // It allows to make a transfer with arbitrary settings
        dest.transfer(amount, bounce, 0);
    }
}
